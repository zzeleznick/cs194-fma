---
layout: post
title: Face Morphing
subtitle: Warping, Averaging, and Caricatures
images: site.images
---


h2(anchor#main). %(octicon octicon-link)I. Introduction%


<notextile>
Here, we will explore the beauty of determining facial features, triangulation, and morphing in great detail. Shape and symmetry of individual faces enable us to distinguish identities, and we will see how to morph someone’s face into someone else's face, compute the average face of a population, and extrapolate from a population mean to create a caricature.
</notextile>

<h4> But First a Presidential Face Morph!</h4>
<div class="videoWrapper">
    <iframe width="560" height="349" src="http://player.vimeo.com/video/143365166?autoplay=1" frameborder="0" allowfullscreen></iframe>
</div>


<h4> Brief Overview of Key Challenges </h4>

1) Mapping correspondence of features between faces

2) Determining the affine transformation matrix to warp one face to another

3) Ensuring consistency between feature space labeling and dimensions



<h2>  II. Defining Correspondences </h2>
<notextile>
Distinctive features such as eyes and eyebrows, lips and nose, ears and chin, are important to preserve — and act as the key areas of interest to morph between faces. In this project, I used the
</notextile> <code> ginput </code> function from <code> matplotlib.pyplot</code>. <notextile>
I then selected n points [30-40] for faces A,B, selecting each pair of corresponding point side-by-side.
</notextile>


<h2 class="center"> III. Face Morphs </h2>


<div class="pure-g">
{% for image in site.p5_morphs offset:0%}
    <div class="pure-u-1-3 pure-u-md-1-3 center"> !{{ site.github_path | escape  }}{{site.p5_path}}{{image.ref}}({{image.title}})!:http://zzeleznick.github.io/cs194-fma/{{site.p5_path}}{{image.ref}}
         {{image.title}}
       <br><br>
    </div>
{% endfor %}
</div>
<notextile></notextile>


{% comment %}
<div class="pure-g">
{% for image in site.p4_alg offset:0%}
    <div class="pure-u-1-3 pure-u-md-1-2 center"> !{{ site.github_path | escape  }}{{site.p4_path}}{{image.ref}}({{image.title}})!:http://zzeleznick.github.io/cs194-fma/{{site.p4_path}}{{image.ref}}

         {% if image.ref == 'alg/DP2.png' %}  {{image.title}}[2]
         {% elsif image.ref == 'alg/DP3.png' %} {{image.title}}[3]
         {% elsif image.ref == 'alg/DP5.png' %} {{image.title}}[4]
         {% else %} {{image.title}} {% endif %}
       <br><br>
    </div>
{% endfor %}
</div>
<notextile>
    For a closer look at the implementation details, check out the <a target="_blank" href= {{ site.github_path | escape  }}{{site.p4_docs}}>README </a>
    for my package.
</notextile> <br><br>
{% endcomment %}


<!--script src="https://gist.github.com/zzeleznick/bfb5a0c9c3a53d0bfdd6.js"></script-->


<h2 class="center"> IV. Average Faces </h2>

<div class="pure-g">
{% for image in site.p5_ave offset:0%}
    <div class="pure-u-1-4 pure-u-md-1-2 center"> !{{ site.github_path | escape  }}{{site.p5_path}}{{image.ref}}({{image.title}})!:http://zzeleznick.github.io/cs194-fma/{{site.p5_path}}{{image.ref}}
         {{image.title}}
       <br><br>
    </div>
{% endfor %}
</div>
<notextile>
For each of the input images above, each pair of faces was morphed to the midway shape and then cross disolved to simulate the average of the two faces.
</notextile> <br> <br>

<h2 class="center"> V. Population Average Faces </h2>

<div class="pure-g">
{% for image in site.p5_popAve limit:3 offset:0%}
    <div class="pure-u-1-3 pure-u-md-1-3 center"> !{{ site.github_path | escape  }}{{site.p5_path}}{{image.ref}}({{image.title}})!:http://zzeleznick.github.io/cs194-fma/{{site.p5_path}}{{image.ref}}
         {{image.title}}
       <br><br>
    </div>
{% endfor %}
</div>

<div class="pure-g">
{% for image in site.p5_popAve offset:3%}
    <div class="pure-u-1-4 pure-u-md-1-2 center"> !{{ site.github_path | escape  }}{{site.p5_path}}{{image.ref}}({{image.title}})!:http://zzeleznick.github.io/cs194-fma/{{site.p5_path}}{{image.ref}}
         {{image.title}}
       <br><br>
    </div>
{% endfor %}
</div>


<h3 class='center'> VI. Caricatures </h3>

<div class="pure-g">
{% for image in site.p5_char offset:0%}
    <div class="pure-u-1-4 pure-u-md-1-2 center"> !{{ site.github_path | escape  }}{{site.p5_path}}{{image.ref}}({{image.title}})!:http://zzeleznick.github.io/cs194-fma/{{site.p5_path}}{{image.ref}}
         {{image.title}}
       <br><br>
    </div>
{% endfor %}
</div>

<notextile>
Rather than keep the weight values in the range [0,1], we can morph faces beyond the typical geometry bounds to produce caricatures.
Formula for weights given as </notextile> <code> (1-alpha) * imA_Pts + alpha * imB_Pts </code>
</notextile>


<h3 class="center"> Bells & Whistles </h3>
1) Presidential Morph Video

2) Facial Gender Bender

3) Participation in Class Morph

<br>
{% comment %}
Failure cases
Precomputation
Demo
{% endcomment %}

<comment>

### A list!

http://redcloth.org/textile/phrase-modifiers/#links

I'm really excited about "RedCloth":redcloth.
I love it so much, I think I'll name my first child "RedCloth":redcloth.
[redcloth]http://redcloth.org
 </comment>

<br>
<h5 class='center'>  - Zachary Zeleznick </h5>